// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  bio            String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  channelIds String[]  @db.ObjectId
  channels   Channel[] @relation("members", fields: [channelIds], references: [id])

  accounts    Account[]
  messages    Message[]
  ownChannels Channel[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Channel {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  createdAt   DateTime @default(now())
  name        String?
  description String?

  messageIds String[]  @db.ObjectId
  messages   Message[]

  memberIds String[] @db.ObjectId
  members   User[]   @relation("members", fields: [memberIds], references: [id])

  ownerId String @db.ObjectId
  owner   User   @relation(fields: [ownerId], references: [id], onDelete: Cascade)
}

model Message {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  body      String?
  createdAt DateTime @default(now())

  channelId String  @db.ObjectId
  channel   Channel @relation(fields: [channelId], references: [id], onDelete: Cascade)

  senderId String @db.ObjectId
  sender   User   @relation(fields: [senderId], references: [id])
}
